{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../auth/token.storage\";\nimport * as i4 from \"@auth0/angular-jwt\";\nexport class UserService {\n  constructor(route, http, token, jwtService, router) {\n    /*this.userList2$ =  this.route.data.pipe(\n      map(data => data['userList']));\n      this.userList2$.subscribe(\n        (data : any) => {\n          console.log(\"data =\",data);\n          this.userList = data;\n        },\n        error => this.router.navigate([''])\n        );*/\n\n    /*this.route.data.subscribe(\n     (data : any) => {\n       console.log(\"data usersevice = \", data);\n       this.userList = data;\n     },\n     error => this.router.navigate([''])\n     );*/\n    this.route = route;\n    this.http = http;\n    this.token = token;\n    this.jwtService = jwtService;\n    this.router = router;\n    /*this.getDataUserListFromBack().subscribe(\n        (data : any) => {\n          console.log(data);\n          this.userList = data;\n        },\n        error => this.router.navigate([''])\n        );*/\n    //console.log(\"userlist = \", this.userList);\n    //this.getDataUserListFromBack().subscribe(userList2 => this.userList2 = userList2);\n    //this.userList2 = this.getDataUserListFromBack().subscribe(value => console.log(value));\n    //console.log(this.userList2);\n\n    /*this.getDataUserListFromBack().subscribe(data => {\n        this.userList2 = data;\n    });*/\n    //console.log (this.userList[1]);\n    // this.getDataUserListFromBack().subscribe(value => console.log(value));\n\n    /*var datas = this.getDataUserListFromBack();\n    for (var i = 0; i < datas(); i++)\n    {\n     }\n    */\n\n    /*datas.subscribe(value => console.log(`datas = ${value[1]}`));\n    console.log(\"datas = \", datas);\n    var yolo = this.getDataUserListFromBack().subscribe({next: value => {return value}});\n    console.log(\"yolo = \", yolo);\n    var abc = this.getDataUserListFromBack();\n    abc.subscribe(value => console.log(`abc = ${value[1].email}`));\n    */\n    //for (var i = 0; i < value.length())\n    // this.getDataUserListFromBack().pipe(first()).subscribe(users => this.userList[1] = users);\n    //this.userList = this.getDataUserListFromBack().pipe;\n  }\n\n  ngOnInit() {//console.log(\"userlist = \", this.userList);\n\n    /*  this.route.data.subscribe(\n    (data : any) => {\n    console.log(data);\n    this.userList = data;\n    },\n    error => this.router.navigate([''])\n    );*/\n\n    /*this.getDataUserListFromBack().subscribe(\n        (data : any) => {\n          console.log(data);\n          this.userList = data;\n        },\n        error => this.router.navigate([''])\n        );*/\n  }\n\n  ngOnDestroy() {\n    /*this.route.data.unsubscribe(\n         );*/\n    //console.log(\"coucou il faut me destroy\");\n  }\n\n  changeUserList(tab) {\n    this.userList = tab;\n  }\n\n  getUserList() {\n    return this.userList;\n  }\n\n  getUserListSolve() {\n    return this.getDataUserListFromBack();\n  }\n\n  getUserById(id) {\n    var i = 0;\n\n    while (this.userList[i]) {\n      if (id === this.userList[i].id) return this.userList[i];\n      i++;\n    }\n\n    throw new Error('User not found!');\n    /*for(let idx =0; idx; idx++) {\n        console.log(`Element at index ${idx} is ${fruits[idx]}`);\n    }*/\n  }\n  /*options: {\n      headers?: HttpHeaders | {[header: string]: string | string[]},\n      observe?: 'body' | 'events' | 'response',\n      params?: HttpParams|{[param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>},\n      reportProgress?: boolean,\n      responseType?: 'arraybuffer'|'blob'|'json'|'text',\n      withCredentials?: boolean,\n    }*/\n\n  /*getUserIdFromBack(id : number): Observable<User>\n  {\n      //var i =  \"http://localhost:3000/api/v1/user/\" + id;\n      //id = 2;\n      return this.http.get('/api/users/' + id).pipe(map((user : User) => user));\n      \n      // http://localhost:3000/api/v1/user/:id\n  }*/\n\n  /*async*/\n\n\n  getUserIdFromBack(id) {\n    //return this.http.get(\"http://localhost:3000/api/v1/user/\" + id, {headers: new HttpHeaders({'Authorization' : 'Bearer ' + this.token.getToken()}).pipe(map((user:UserI) => user));\n    return this.http.get(\"http://localhost:3000/api/v1/user/\" + id, {\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + this.token.getToken()\n      })\n    }); //return this.http.get<UserI>(\"http://localhost:3000/api/v1/user/\" + id );\n    //return this.http.get(\"http://localhost:3000/api/v1/user/\" + id).pipe(map((user : UserI) => user));\n  }\n\n  getDataUserListFromBack() {\n    /* const headersg = new HttpHeaders({\n         //'Content-Type': 'application/json',\n         'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc1R3b0ZhY3RvckF1dGhlbnRpY2F0ZSI6ZmFsc2UsInN1YiI6MSwiaWF0IjoxNjYxMTc0MjEzLCJleHAiOjE2NjEyNjA2MTN9.Tk7ZhnoNOOZnnjWXH2YKbuk3X32Xwv-EGvrHNY2tWWw',\n       })*/\n    //.set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc1R3b0ZhY3RvckF1dGhlbnRpY2F0ZSI6ZmFsc2UsInN1YiI6MSwiaWF0IjoxNjYxMTc0MjEzLCJleHAiOjE2NjEyNjA2MTN9.Tk7ZhnoNOOZnnjWXH2YKbuk3X32Xwv-EGvrHNY2tWWw')\n    //.set('Access-Control-Allow-Origin', '*');\n    //return this.http.get<UserListComponent>(\"http://localhost:3000/api/v1/user/\", {headers: new HttpHeaders('Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc1R3b0ZhY3RvckF1dGhlbnRpY2F0ZSI6ZmFsc2UsInN1YiI6MSwiaWF0IjoxNjYxMTc0MjEzLCJleHAiOjE2NjEyNjA2MTN9.Tk7ZhnoNOOZnnjWXH2YKbuk3X32Xwv-EGvrHNY2tWWw')});\n    return this.http.get(\"http://localhost:3000/api/v1/user/\", {\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + this.token.getToken()\n      })\n    })\n    /*.pipe(catchError())*/\n    ;\n  }\n\n}\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.TokenStorageService), i0.ɵɵinject(i4.JwtHelperService), i0.ɵɵinject(i1.Router));\n};\n\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAArB,QAAoD,sBAApD;;;;;;AAaA,OAAM,MAAOC,WAAP,CAAkB;EAQpBC,YAAoBC,KAApB,EAAmDC,IAAnD,EAA8EC,KAA9E,EAAmHC,UAAnH,EAA0JC,MAA1J,EAAyK;IAGvK;;;;;;;;;;IASC;;;;;;;IAZiB;IAA+B;IAA2B;IAAqC;IAAuC;IAoBtJ;;;;;;;IAOF;IAEE;IAEA;IACA;;IAEA;;;IAGA;IACA;;IAEA;;;;;;IAMA;;;;;;;IAOA;IACD;IACC;EACH;;EACDC,QAAQ,IACN;;IAEK;;;;;;;;IAOH;;;;;;;EAQH;;EAEDC,WAAW;IACT;;IAGE;EACH;;EAEDC,cAAc,CAACC,GAAD,EAAa;IAEzB,KAAKC,QAAL,GAAeD,GAAf;EACD;;EAEDE,WAAW;IAEP,OAAO,KAAKD,QAAZ;EACH;;EAEDE,gBAAgB;IAEd,OAAO,KAAKC,uBAAL,EAAP;EACD;;EAIDC,WAAW,CAACC,EAAD,EAAW;IAElB,IAAIC,CAAC,GAAG,CAAR;;IACA,OAAO,KAAKN,QAAL,CAAcM,CAAd,CAAP,EACA;MACI,IAAID,EAAE,KAAK,KAAKL,QAAL,CAAcM,CAAd,EAAiBD,EAA5B,EACI,OAAO,KAAKL,QAAL,CAAcM,CAAd,CAAP;MACJA,CAAC;IACJ;;IACD,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;IACA;;;EAIF;EAEF;;;;;;;;;EAQA;;;;;;;;;EAUA;;;EAAUC,iBAAiB,CAACH,EAAD,EAAW;IAClC;IACC,OAAO,KAAKb,IAAL,CAAUiB,GAAV,CAAqB,uCAAuCJ,EAA5D,EAAgE;MAACK,OAAO,EAAE,IAAItB,WAAJ,CAAgB;QAAC,iBAAkB,YAAY,KAAKK,KAAL,CAAWkB,QAAX;MAA/B,CAAhB;IAAV,CAAhE,CAAP,CAFiC,CAGlC;IAEA;EAED;;EACHR,uBAAuB;IAEpB;;;;IAIC;IACA;IACD;IACC,OAAO,KAAKX,IAAL,CAAUiB,GAAV,CAAsB,oCAAtB,EAA4D;MAACC,OAAO,EAAE,IAAItB,WAAJ,CAAgB;QAAC,iBAAkB,YAAY,KAAKK,KAAL,CAAWkB,QAAX;MAA/B,CAAhB;IAAV,CAA5D;IAA8I;IAArJ;EACH;;AAjKmB;;;mBAAXtB,aAAWuB;AAAA;;;SAAXvB;EAAWwB,SAAXxB,WAAW","names":["HttpHeaders","UserService","constructor","route","http","token","jwtService","router","ngOnInit","ngOnDestroy","changeUserList","tab","userList","getUserList","getUserListSolve","getDataUserListFromBack","getUserById","id","i","Error","getUserIdFromBack","get","headers","getToken","i0","factory"],"sourceRoot":"","sources":["/home/toueis/GroupTranscendenceBrToueis/front/src/app/services/user/user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport {Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { catchError, map, Observable, of, switchMap, throwError } from 'rxjs';\r\nimport { UserListComponent } from 'src/app/user-list/user-list.component';\r\nimport { __values } from 'tslib';\r\nimport { User, UserI } from '../../models/user.models';\r\nimport { TokenStorageService } from '../auth/token.storage';\r\n\r\n@Injectable(/*{\r\n  providedIn: 'root'\r\n}*/)\r\nexport class UserService {\r\n    /*userMap? : Observable<Map<number, User>>;\r\n    userList2!: User[];*/\r\n    userList2$!: Observable <UserI[]>;\r\n    userList!: UserI[];\r\n\r\n\r\n      \r\n    constructor(private route: ActivatedRoute ,private http : HttpClient, private token : TokenStorageService, private jwtService : JwtHelperService, private router : Router\r\n        )\r\n    {\r\n      /*this.userList2$ =  this.route.data.pipe(\r\n        map(data => data['userList']));\r\n        this.userList2$.subscribe(\r\n          (data : any) => {\r\n            console.log(\"data =\",data);\r\n            this.userList = data;\r\n          },\r\n          error => this.router.navigate([''])\r\n          );*/\r\n       /*this.route.data.subscribe(\r\n        (data : any) => {\r\n          console.log(\"data usersevice = \", data);\r\n          this.userList = data;\r\n        },\r\n        error => this.router.navigate([''])\r\n        );*/\r\n\r\n        /*this.getDataUserListFromBack().subscribe(\r\n            (data : any) => {\r\n              console.log(data);\r\n              this.userList = data;\r\n            },\r\n            error => this.router.navigate([''])\r\n            );*/\r\n      //console.log(\"userlist = \", this.userList);\r\n\r\n        //this.getDataUserListFromBack().subscribe(userList2 => this.userList2 = userList2);\r\n\r\n        //this.userList2 = this.getDataUserListFromBack().subscribe(value => console.log(value));\r\n        //console.log(this.userList2);\r\n\r\n        /*this.getDataUserListFromBack().subscribe(data => {\r\n            this.userList2 = data;\r\n        });*/\r\n        //console.log (this.userList[1]);\r\n        // this.getDataUserListFromBack().subscribe(value => console.log(value));\r\n        \r\n        /*var datas = this.getDataUserListFromBack();\r\n        for (var i = 0; i < datas(); i++)\r\n        {\r\n\r\n        }\r\n        */\r\n        /*datas.subscribe(value => console.log(`datas = ${value[1]}`));\r\n        console.log(\"datas = \", datas);\r\n        var yolo = this.getDataUserListFromBack().subscribe({next: value => {return value}});\r\n        console.log(\"yolo = \", yolo);\r\n        var abc = this.getDataUserListFromBack();\r\n        abc.subscribe(value => console.log(`abc = ${value[1].email}`));\r\n*/\r\n        //for (var i = 0; i < value.length())\r\n       // this.getDataUserListFromBack().pipe(first()).subscribe(users => this.userList[1] = users);\r\n        //this.userList = this.getDataUserListFromBack().pipe;\r\n    }\r\n    ngOnInit(): void {\r\n      //console.log(\"userlist = \", this.userList);\r\n\r\n           /*  this.route.data.subscribe(\r\n        (data : any) => {\r\n          console.log(data);\r\n          this.userList = data;\r\n        },\r\n        error => this.router.navigate([''])\r\n        );*/\r\n        /*this.getDataUserListFromBack().subscribe(\r\n            (data : any) => {\r\n              console.log(data);\r\n              this.userList = data;\r\n            },\r\n            error => this.router.navigate([''])\r\n            );*/\r\n          \r\n    }\r\n\r\n    ngOnDestroy(): void{\r\n      /*this.route.data.unsubscribe(\r\n\r\n        );*/\r\n        //console.log(\"coucou il faut me destroy\");\r\n    }\r\n\r\n    changeUserList(tab: UserI[]): void\r\n    {\r\n      this.userList= tab;\r\n    }\r\n\r\n    getUserList():  UserI[] \r\n    {\r\n        return this.userList;    \r\n    }\r\n\r\n    getUserListSolve():  Observable<UserI[]> \r\n    {\r\n      return this.getDataUserListFromBack();\r\n    }\r\n\r\n    \r\n\r\n    getUserById(id: number): UserI\r\n    {\r\n        var i = 0;\r\n        while (this.userList[i])\r\n        {\r\n            if (id === this.userList[i].id )\r\n                return this.userList[i];\r\n            i++;\r\n        }\r\n        throw new Error('User not found!');\r\n        /*for(let idx =0; idx; idx++) {\r\n            console.log(`Element at index ${idx} is ${fruits[idx]}`);  \r\n        }*/\r\n\r\n     }\r\n    \r\n    /*options: {\r\n        headers?: HttpHeaders | {[header: string]: string | string[]},\r\n        observe?: 'body' | 'events' | 'response',\r\n        params?: HttpParams|{[param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>},\r\n        reportProgress?: boolean,\r\n        responseType?: 'arraybuffer'|'blob'|'json'|'text',\r\n        withCredentials?: boolean,\r\n      }*/\r\n    /*getUserIdFromBack(id : number): Observable<User>\r\n    {\r\n        //var i =  \"http://localhost:3000/api/v1/user/\" + id;\r\n        //id = 2;\r\n        return this.http.get('/api/users/' + id).pipe(map((user : User) => user));\r\n        \r\n\r\n       // http://localhost:3000/api/v1/user/:id\r\n    }*/\r\n\r\n    /*async*/ getUserIdFromBack(id: number): /*Promise <*/Observable<UserI>/*>*/ {\r\n        //return this.http.get(\"http://localhost:3000/api/v1/user/\" + id, {headers: new HttpHeaders({'Authorization' : 'Bearer ' + this.token.getToken()}).pipe(map((user:UserI) => user));\r\n         return this.http.get<UserI>(\"http://localhost:3000/api/v1/user/\" + id, {headers: new HttpHeaders({'Authorization' : 'Bearer ' + this.token.getToken()})});\r\n        //return this.http.get<UserI>(\"http://localhost:3000/api/v1/user/\" + id );\r\n\r\n        //return this.http.get(\"http://localhost:3000/api/v1/user/\" + id).pipe(map((user : UserI) => user));\r\n        \r\n      }\r\n    getDataUserListFromBack(): Observable<UserI[]>\r\n    {\r\n       /* const headersg = new HttpHeaders({\r\n            //'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc1R3b0ZhY3RvckF1dGhlbnRpY2F0ZSI6ZmFsc2UsInN1YiI6MSwiaWF0IjoxNjYxMTc0MjEzLCJleHAiOjE2NjEyNjA2MTN9.Tk7ZhnoNOOZnnjWXH2YKbuk3X32Xwv-EGvrHNY2tWWw',\r\n          })*/\r\n        //.set('Authorization', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc1R3b0ZhY3RvckF1dGhlbnRpY2F0ZSI6ZmFsc2UsInN1YiI6MSwiaWF0IjoxNjYxMTc0MjEzLCJleHAiOjE2NjEyNjA2MTN9.Tk7ZhnoNOOZnnjWXH2YKbuk3X32Xwv-EGvrHNY2tWWw')\r\n        //.set('Access-Control-Allow-Origin', '*');\r\n       //return this.http.get<UserListComponent>(\"http://localhost:3000/api/v1/user/\", {headers: new HttpHeaders('Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc1R3b0ZhY3RvckF1dGhlbnRpY2F0ZSI6ZmFsc2UsInN1YiI6MSwiaWF0IjoxNjYxMTc0MjEzLCJleHAiOjE2NjEyNjA2MTN9.Tk7ZhnoNOOZnnjWXH2YKbuk3X32Xwv-EGvrHNY2tWWw')});\r\n        return this.http.get<User[]>(\"http://localhost:3000/api/v1/user/\", {headers: new HttpHeaders({'Authorization' : 'Bearer ' + this.token.getToken()})})/*.pipe(catchError())*/;\r\n    }\r\n\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}